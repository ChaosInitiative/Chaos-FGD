@SolidClass base(MomentumTrigger)
	appliesto(MOMENTUM)
= trigger_momentum_catapult : "Catapult the player at a target or in a given diretion at a given velocity."
	[
	playerSpeed(float) : "Player Speed" : 450 : "Speed at which to launch the players (u/sec)"
	useThresholdCheck(integer) : "Use Threshold Check" : 0
	entryAngleTolerance(float) : "Entry Angle Tolerance" : "0.0" : "Flung object's velocity must be pointing this much at the target. Specify a value between [-1...1] 1 means exactly, 0 means within 180 degrees -1 means any angle is accepted. This is only used if Use Threshold Check is set to yes."
	useExactVelocity(integer) : "Use Exact Velocity" : 0 : "Try to fling exactly at the speed specified - this prevents the added upward velocity from a launch target."

	exactVelocityChoiceType[engine](integer) : "Exact Solution Method" : 0
	exactVelocityChoiceType(choices) : "Exact Solution Method" : 0 :
	"Using exact velocity generates two correct solutions. Use this to force which one you choose." =
		[
		0 : "Best"
		1 : "Solution One"
		2 : "Solution Two"
		]

	lowerThreshold(float) : "Lower Threshold" : "0.15" : "Flung player must be within this percentage value in order to activate fling. Specify a value between [0...1] (default is .15) This is only used if Use Threshold Check is set to yes."
	upperThreshold(float) : "Upper Threshold" : "0.30" : "Flung player must be within this percentage value in order to activate fling. Specify a value between [0...1] (default is .30) This is only used if Use Threshold Check is set to yes."
	launchDirection(angle) : "Launch direction" : "0 0 0" : "Direction to launch the player in."
	launchTarget(target_destination) : "Launch target" : "" : "Entity to try to 'hit' when we're launched."
	onlyVelocityCheck(integer) : "Only check velocity" : 0 : "Only check velocity of the touching object - don't actually catapult it.  Use in conjunction with OnCatapulted to create velocity checking triggers.  Only works when Use Threshhold Check is enabled."
	OnThink(integer) : "Update every interval" : 0 : "If you want to make the trigger updating for each defined interval, set it to 1."
	Interval(float) : "Interval" : "1.0" : "Time in seconds between each update"
	EveryTick(integer) : "Every tick" : 0 : "If you want the trigger to update and fire every tick, set this to 1."
	heightOffset(float) :"Height Offset" : "32.0" : "Offset the origin of the player in the target calculation."

	output OnCatapulted(void) : "The object has been launched."
	]
