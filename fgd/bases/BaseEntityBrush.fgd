@BaseClass
	base(BaseEntityIO)
= BaseEntityBrush
	[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	globalname(string) : "Global Entity Name" : : "Name by which this entity is linked to another entity in a different map. " +
		"When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map " +
		"will have the previous map's state copied over their state."

	origin(origin) : "Origin (X Y Z)" : : "The position of this brush entity's center in the world. Rotating entities typically rotate around their origin."

	parentname(target_destination) : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent. Set an attachment point via 'parentname,attachment'."

	linedivider_vscript[+VSCRIPT, -engine](string) readonly : "-------------------------------------------------------------------------------------------------------" : ""

	vscripts[VSCRIPT](scriptlist) : "Entity Scripts" : : "Name(s) of script files that are executed after all entities have spawned."
	thinkfunction[VSCRIPT](string) : "Script think function" : : "Name of a function in this entity's script scope which will be called automatically."

	linedivider_base[!engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""

	// We could have wirebox() for these, but don't. That messes up if these are unset.
	// This is a pretty advanced feature, so it's fine that it has no preview.
	mins(vector) : "Minimum Bounding Box Size" : : "Co-ordinate of the minimum bounding box corner, relative to entity origin. " +
		"The bounding box is drawn from this corner to the other one. " +
		"Requires Bounding Box collisions (solid 2) to be used. " +
		"Can be used to overwrite the collision shape of a brush, although it can only be a cuboid. Can be AddOutputed to change shape at runtime."
	maxs(vector) : "Maximum Bounding Box Size" : : "Co-ordinate of the maximum bounding box corner, relative to entity origin. " +
		"The bounding box is drawn from this corner to the other one. " +
		"Requires Bounding Box collisions (solid 2) to be used. " +
		"Can be used to overwrite the collision shape of a brush, although it can only be a cuboid. Can be AddOutputed to change shape at runtime."

	solid[engine](integer) : "Collisions" : 6
	solid(choices) : "Collisions" : 6 : "Method of collision for this entity. Can be changed at runtime with AddOutput." =
	[
		0: "None"
		1: "BSP (QPhysics)"
		2: "Bounding Box"
		3: "Oriented Bounding Box"
		4: "Oriented Bounding Box, constrained to Yaw only"
		5: "Custom (defined per-entity, if not defined the entity will have bizarre collision behavior)"
		6: "VPhysics"
	]

	linedivider_basebrush[!engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""

	]
