@PointClass base(BaseNPC) 
	appliesto(+HL2_ENTITIES) 
	studioprop("models/combine_turrets/floor_turret.mdl") 
	frustum(_frustum_fov, _frustum_near, _frustum_far, _frustum_color, -1)
= npc_turret_floor: "Combine Floor Turret"
	[
	spawnflags(flags) : "spawnflags" =
		[
		32: "Autostart" : 0
		64: "Start Inactive" : 0
		128: "Fast Retire" : 0
		256: "Out of Ammo" : 0
		512: "Citizen modified (Friendly)" : 0
		]

	skinnumber(integer) : "Skin Number" : 0 : "Which skin to use for this turret. Set to 0 to select randomly."

	_frustum_far[!engine](integer) readonly : "<Maximum Range>" : 1200 : "How far the turret will be able to see targets. Always 1200, but this keyvalue is needed to display the preview."
	_frustum_color[!engine](string) readonly : "<Frustum Color>" : "255 0 0" : "Ignore, needed to color the range preview."

	// Inputs
	input Toggle(void) : "Toggle - If open, close. If closed, open."
	input Enable(void) : "Enable the turret."
	input Disable(void) : "Disable the turret."
	input DepleteAmmo(void) : "Depletes all the ammo from a turret, causing it to dry-fire."
	input RestoreAmmo(void) : "Restores ammo to a turret, allowing it to fire live rounds again."
	input SelfDestruct(void) : "Causes the turret to warn and then explode."

	// Outputs
	output OnDeploy(void) : "Turret is becoming active and dangerous."
	output OnRetire(void) : "Turret is becoming inactive and harmless."
	output OnTipped(void) : "Turret has been tipped over and is inactive."
	output OnExplode(void) : "Turret has exploded."
	output OnPhysGunPickup(void) : "Picked up with physgun"
	output OnPhysGunDrop(void) : "Released by physgun"
	]
