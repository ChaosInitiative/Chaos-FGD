@PointClass base(BaseProjector)
	appliesto(P2CE)
	studioprop()
= prop_tractor_beam: "Emitter for an Excursion Funnel."
	[
	linearforce[engine](integer) : "Funnel Direction" : 250
	linearforce(choices) : "Funnel Direction" : 250 : "Speed of the Funnel, positive is forward." =
		[
		 250: "[+250] Forward / Blue"
		-250: "[-250] Reversed / Orange"
		]

	noemitterparticles(boolean) : "Disable Emitter Particles" : 0 : "Disable the whirly particles on the emitter."

	// The name here is a bit misleading, but this is for a good reason
	// before it used to be a boolean, but we changed to an integer.
	// I kept the old name here for backwards compatibility.
	use128model[engine](boolean) : "Use PeTI Model?" : 0
	use128model(choices) : "Model Type" : 0 : "Which model should this use?" =
		[
		0: "192 Model"
		1: "128 Model (PeTI)"
		2: "Custom Model"
		]

	model[engine](studio) : "Model" : ""
	model(choices) : "[H] Model" : "models/props/tractor_beam_emitter.mdl" : "The model to show in Hammer, or a custom model when 'Custom Model' is selected." =
		[
		"models/props/tractor_beam_emitter.mdl": "192 Model"
		"models/props_ingame/tractor_beam_128.mdl": "128 Model (PeTI)"
		]

	model[engine](studio): "Funnel model" : "models/props/tractor_beam_emitter.mdl"

	primarycolor(color255) : "Primary Color (R G B A)" : "10 160 255 255" : "Colour of the funnel when it is moving forwards."
	secondarycolor(color255) : "Secondary Color (R G B A)" : "255 160 32 255" : "Colour of the funnel when it is moving backwards."

	// Inputs
	input SetLinearForce(float) : "Set the speed of the Funnel, and therefore the direction."
	input SetPrimaryColor(color255) : "Changes the primary colour of the funnel."
	input SetSecondaryColor(color255) : "Changes the secondary colour of the funnel."
	]
