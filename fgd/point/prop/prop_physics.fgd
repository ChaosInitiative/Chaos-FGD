@PointClass
	base(BasePropPhysics, SetModel)
	studioprop() 
	sphere(fademindist) 
	sphere(fademaxdist) 
= prop_physics: "A prop that physically simulates as a single rigid body. " +
	"It can be constrained to other physics objects using hinges or other constraints. " +
	"It can also be configured to break when it takes enough damage. " +
	"Note that the health of the object will be overridden by the health inside the model, " +
	"to ensure consistent health game-wide. " +
	"If the model used by the prop is configured to be used as a prop_dynamic " +
	"(i.e. it should not be physically simulated) then it cannot normally be used as a prop_physics. " +
	"Upon level load it will display a warning in the console and remove itself. " +
	"Use a prop_physics_override instead."
	[
	allowfunnel[P2CE](boolean) : "Allow Portal Funneling" : 1 : "Whether or not this object should auto-funnel into a portal."

	breakabletype[engine](integer) : "Exploitable by Player" : 0
	exploitablebyplayer(choices) : "Exploitable by Player" : 0 =
		[
		0: "Default"
		1: "Explosive"
		]

	// Inputs
	input Ignite(void) : "Ignite, burst into flames."
	input IgniteLifetime(float) : "Ignite, with a parameter lifetime."
	input IgniteNumHitboxFires(integer) : "Ignite, with a parameternumber of hitbox fires."
	input IgniteHitboxFireScale(float) : "Ignite, with a parameter hitbox fire scale."
	]
